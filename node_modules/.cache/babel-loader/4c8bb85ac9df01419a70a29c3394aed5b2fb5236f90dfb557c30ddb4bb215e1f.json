{"ast":null,"code":"var _jsxFileName = \"D:\\\\codes_and_all_that\\\\React\\\\Project\\\\converter\\\\src\\\\context\\\\DataContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from \"react\";\nimport { useColorMode } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataContext = /*#__PURE__*/createContext();\nexport default DataContext;\nexport const DataProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const {\n    colorMode,\n    toggleColorMode\n  } = useColorMode();\n  let lightMode = colorMode === \"light\" ? true : false;\n  let [data, setData] = useState(localStorage.getItem(\"data\") ? localStorage.getItem(\"data\") : null);\n  const contextData = {\n    lightMode: lightMode,\n    toggleColorMode: toggleColorMode,\n    // moed:mode , setMode:setMode,\n    data: data,\n    setData: setData\n  };\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    value: contextData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(DataProvider, \"Giz92tgyMsqDpL2LcKkj6va5zR8=\", false, function () {\n  return [useColorMode];\n});\n_c = DataProvider;\nvar _c;\n$RefreshReg$(_c, \"DataProvider\");","map":{"version":3,"names":["createContext","useState","useColorMode","jsxDEV","_jsxDEV","DataContext","DataProvider","_ref","_s","children","colorMode","toggleColorMode","lightMode","data","setData","localStorage","getItem","contextData","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/codes_and_all_that/React/Project/converter/src/context/DataContext.js"],"sourcesContent":["import {createContext, useState} from \"react\"\r\nimport { useColorMode } from \"@chakra-ui/react\";\r\n\r\nconst DataContext = createContext();\r\n\r\nexport default DataContext;\r\n\r\nexport const DataProvider = ({children}) => {\r\n\r\n  const { colorMode, toggleColorMode } = useColorMode()\r\n  let lightMode = colorMode ===\"light\"? true:false\r\n\r\n  let [data, setData] = useState(localStorage.getItem(\"data\")?localStorage.getItem(\"data\"):null)\r\n\r\n  const contextData = {\r\n    lightMode:lightMode, toggleColorMode:toggleColorMode,\r\n    // moed:mode , setMode:setMode,\r\n    data:data, setData:setData\r\n  }\r\n  return (\r\n    <DataContext.Provider value={contextData}>{children}</DataContext.Provider>\r\n  )\r\n}"],"mappings":";;AAAA,SAAQA,aAAa,EAAEC,QAAQ,QAAO,OAAO;AAC7C,SAASC,YAAY,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAEnC,eAAeK,WAAW;AAE1B,OAAO,MAAMC,YAAY,GAAGC,IAAA,IAAgB;EAAAC,EAAA;EAAA,IAAf;IAACC;EAAQ,CAAC,GAAAF,IAAA;EAErC,MAAM;IAAEG,SAAS;IAAEC;EAAgB,CAAC,GAAGT,YAAY,CAAC,CAAC;EACrD,IAAIU,SAAS,GAAGF,SAAS,KAAI,OAAO,GAAE,IAAI,GAAC,KAAK;EAEhD,IAAI,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAACc,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,GAACD,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,GAAC,IAAI,CAAC;EAE9F,MAAMC,WAAW,GAAG;IAClBL,SAAS,EAACA,SAAS;IAAED,eAAe,EAACA,eAAe;IACpD;IACAE,IAAI,EAACA,IAAI;IAAEC,OAAO,EAACA;EACrB,CAAC;EACD,oBACEV,OAAA,CAACC,WAAW,CAACa,QAAQ;IAACC,KAAK,EAAEF,WAAY;IAAAR,QAAA,EAAEA;EAAQ;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AAE/E,CAAC;AAAAf,EAAA,CAfYF,YAAY;EAAA,QAEgBJ,YAAY;AAAA;AAAAsB,EAAA,GAFxClB,YAAY;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}