{"ast":null,"code":"var _jsxFileName = \"D:\\\\codes_and_all_that\\\\React\\\\Project\\\\converter\\\\src\\\\components\\\\navbar.js\",\n  _s = $RefreshSig$();\nimport { Flex, IconButton, useDisclosure, Input, Button } from \"@chakra-ui/react\";\nimport { HamburgerIcon } from \"@chakra-ui/icons\";\nimport Toogle from \"./toogle\";\nimport { useContext, useRef } from \"react\";\nimport DataContext from \"../context/DataContext\";\nimport { Drawer, DrawerBody, DrawerFooter, DrawerHeader, DrawerOverlay, DrawerContent, DrawerCloseButton } from '@chakra-ui/react';\nimport ModalDrawer from \"./Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NavBar() {\n  _s();\n  let {\n    lightMode,\n    toggleColorMode,\n    onItOpen,\n    isItOpen\n  } = useContext(DataContext);\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  const btnRef = useRef();\n  function openModal() {\n    isItOpen = true;\n    onItOpen;\n  }\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    bg: lightMode ? \"#ccddfc\" : \"#0f1726\",\n    w: \"100%\",\n    h: \"2rem\",\n    justifyContent: \"space-between\",\n    p: \"0 2%\",\n    align: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      bg: \"transparent\",\n      _hover: {\n        bg: lightMode ? \"white\" : \"#1a202c\",\n        borderRadius: \"25px\"\n      },\n      \"aria-label\": \"Call Segun\",\n      icon: /*#__PURE__*/_jsxDEV(HamburgerIcon, {\n        color: lightMode ? \"black\" : \"white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }, this),\n      ref: btnRef,\n      onClick: onOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Toogle, {\n      lightMode: lightMode,\n      toggleColorMode: toggleColorMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      isOpen: isOpen,\n      placement: \"left\",\n      onClose: onClose,\n      finalFocusRef: btnRef,\n      children: [/*#__PURE__*/_jsxDEV(DrawerOverlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DrawerContent, {\n        children: [/*#__PURE__*/_jsxDEV(DrawerCloseButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DrawerHeader, {\n          children: \"Converter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DrawerBody, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => openModal()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ModalDrawer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(NavBar, \"2oJG1hbc23xGNOUdxo6QAln4ZGY=\", false, function () {\n  return [useDisclosure];\n});\n_c = NavBar;\nvar _c;\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"names":["Flex","IconButton","useDisclosure","Input","Button","HamburgerIcon","Toogle","useContext","useRef","DataContext","Drawer","DrawerBody","DrawerFooter","DrawerHeader","DrawerOverlay","DrawerContent","DrawerCloseButton","ModalDrawer","jsxDEV","_jsxDEV","NavBar","_s","lightMode","toggleColorMode","onItOpen","isItOpen","isOpen","onOpen","onClose","btnRef","openModal","bg","w","h","justifyContent","p","align","children","_hover","borderRadius","icon","color","fileName","_jsxFileName","lineNumber","columnNumber","ref","onClick","placement","finalFocusRef","_c","$RefreshReg$"],"sources":["D:/codes_and_all_that/React/Project/converter/src/components/navbar.js"],"sourcesContent":["import { Flex, IconButton, useDisclosure, Input, Button } from \"@chakra-ui/react\"\r\nimport {HamburgerIcon} from \"@chakra-ui/icons\"\r\nimport Toogle from \"./toogle\"\r\nimport { useContext, useRef } from \"react\"\r\nimport DataContext from \"../context/DataContext\"\r\nimport {\r\n  Drawer,\r\n  DrawerBody,\r\n  DrawerFooter,\r\n  DrawerHeader,\r\n  DrawerOverlay,\r\n  DrawerContent,\r\n  DrawerCloseButton,\r\n} from '@chakra-ui/react'\r\nimport ModalDrawer from \"./Modal\"\r\n\r\n\r\n\r\nexport default function NavBar(){\r\n  let {lightMode , toggleColorMode, onItOpen, isItOpen} = useContext(DataContext)\r\n  const { isOpen, onOpen, onClose } = useDisclosure()\r\n  const btnRef = useRef()\r\n\r\n\r\n  function openModal(){\r\n   \r\n    isItOpen = true\r\n    onItOpen\r\n  }\r\n  return(\r\n    <Flex bg={lightMode?\"#ccddfc\":\"#0f1726\"} w=\"100%\" h=\"2rem\" justifyContent={\"space-between\"} p=\"0 2%\" align=\"center\">\r\n\r\n      <IconButton\r\n      bg=\"transparent\"\r\n        _hover={{bg:lightMode?\"white\":\"#1a202c\", borderRadius:\"25px\"}}\r\n        aria-label='Call Segun'\r\n        icon={<HamburgerIcon color={lightMode?\"black\":\"white\"} />}\r\n        ref={btnRef} onClick={onOpen}\r\n      />\r\n      <Toogle lightMode={lightMode} toggleColorMode={toggleColorMode} />\r\n      \r\n      <Drawer\r\n        isOpen={isOpen}\r\n        placement='left'\r\n        onClose={onClose}\r\n        finalFocusRef={btnRef}\r\n      >\r\n        <DrawerOverlay />\r\n        <DrawerContent>\r\n          <DrawerCloseButton />\r\n          <DrawerHeader>Converter</DrawerHeader>\r\n\r\n          <DrawerBody>\r\n            <Button onClick={()=>openModal()}></Button>\r\n            <ModalDrawer />\r\n            \r\n            \r\n            \r\n          </DrawerBody>\r\n\r\n          {/* <DrawerFooter>\r\n            <Button variant='outline' mr={3} onClick={onClose}>\r\n              Cancel\r\n            </Button>\r\n            <Button colorScheme='blue'>Save</Button>\r\n          </DrawerFooter> */}\r\n        </DrawerContent>\r\n      </Drawer>\r\n      \r\n    </Flex>\r\n  )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}