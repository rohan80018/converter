{"ast":null,"code":"var _jsxFileName = \"D:\\\\codes_and_all_that\\\\React\\\\Project\\\\converter\\\\src\\\\context\\\\DataContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useState } from \"react\";\nimport { useColorMode, useDisclosure } from \"@chakra-ui/react\";\nimport ldb from 'localdata';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataContext = /*#__PURE__*/createContext();\nexport default DataContext;\nexport const DataProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const {\n    colorMode,\n    toggleColorMode\n  } = useColorMode();\n  let lightMode = colorMode === \"light\" ? true : false;\n\n  // let [data, setData] = useState(localStorage.getItem(\"data\")?JSON.parse(localStorage.getItem(\"data\")):null\n  //   // \"0\":\"M\",\"1\":\"B\",\"2\":\"J\",\"3\":\"H\",\"4\":\"G\",\"5\":\"F\",\"6\":\"Q\",\"7\":\"S\",\"8\":\"D\",\"9\":\"A\"\n  //   // \"0\":null,\"1\":null,\"2\":\"\",\"3\":null,\"4\":null,\"5\":null,\"6\":null,\"7\":null,\"8\":null,\"9\":null\n  // )\n\n  // console.log(ldbdata)\n  let [data, setData] = useState({}\n  // \"0\":\"M\",\"1\":\"B\",\"2\":\"J\",\"3\":\"H\",\"4\":\"G\",\"5\":\"F\",\"6\":\"Q\",\"7\":\"S\",\"8\":\"D\",\"9\":\"A\"\n  // \"0\":null,\"1\":null,\"2\":\"\",\"3\":null,\"4\":null,\"5\":null,\"6\":null,\"7\":null,\"8\":null,\"9\":null\n  );\n  // let ldbdata =\"\" \n  let ldbdata = ldb.get(\"data\", value => {\n    console.log(value);\n  });\n  setData(ldbdata ? ldbdata : {});\n  // useEffect(()=>{\n  //   setData(ldbdata?ldbdata:{})\n  // },[])\n\n  let {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  const contextData = {\n    lightMode: lightMode,\n    toggleColorMode: toggleColorMode,\n    // moed:mode , setMode:setMode,\n    data: data,\n    setData: setData,\n    onItOpen: onOpen,\n    isItOpen: isOpen,\n    onClose: onClose,\n    ldbdata: ldbdata\n  };\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    value: contextData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(DataProvider, \"EEfwARPJfN0DzMTJ3jZgOjvL9Qc=\", false, function () {\n  return [useColorMode, useDisclosure];\n});\n_c = DataProvider;\nvar _c;\n$RefreshReg$(_c, \"DataProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","useColorMode","useDisclosure","ldb","jsxDEV","_jsxDEV","DataContext","DataProvider","_ref","_s","children","colorMode","toggleColorMode","lightMode","data","setData","ldbdata","get","value","console","log","isOpen","onOpen","onClose","contextData","onItOpen","isItOpen","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/codes_and_all_that/React/Project/converter/src/context/DataContext.js"],"sourcesContent":["import {createContext, useEffect, useState} from \"react\"\r\nimport { useColorMode, useDisclosure } from \"@chakra-ui/react\";\r\nimport ldb from 'localdata'\r\n\r\nconst DataContext = createContext();\r\n\r\nexport default DataContext;\r\n\r\nexport const DataProvider = ({children}) => {\r\n\r\n  const { colorMode, toggleColorMode } = useColorMode()\r\n  let lightMode = colorMode ===\"light\"? true:false\r\n\r\n  // let [data, setData] = useState(localStorage.getItem(\"data\")?JSON.parse(localStorage.getItem(\"data\")):null\r\n  //   // \"0\":\"M\",\"1\":\"B\",\"2\":\"J\",\"3\":\"H\",\"4\":\"G\",\"5\":\"F\",\"6\":\"Q\",\"7\":\"S\",\"8\":\"D\",\"9\":\"A\"\r\n  //   // \"0\":null,\"1\":null,\"2\":\"\",\"3\":null,\"4\":null,\"5\":null,\"6\":null,\"7\":null,\"8\":null,\"9\":null\r\n  // )\r\n  \r\n  // console.log(ldbdata)\r\n  let [data, setData] = useState({}\r\n    // \"0\":\"M\",\"1\":\"B\",\"2\":\"J\",\"3\":\"H\",\"4\":\"G\",\"5\":\"F\",\"6\":\"Q\",\"7\":\"S\",\"8\":\"D\",\"9\":\"A\"\r\n    // \"0\":null,\"1\":null,\"2\":\"\",\"3\":null,\"4\":null,\"5\":null,\"6\":null,\"7\":null,\"8\":null,\"9\":null\r\n  )\r\n  // let ldbdata =\"\" \r\n  let ldbdata=ldb.get(\"data\",(value)=>{console.log(value)})\r\n  setData(ldbdata?ldbdata:{})\r\n  // useEffect(()=>{\r\n  //   setData(ldbdata?ldbdata:{})\r\n  // },[])\r\n\r\n  let { isOpen, onOpen, onClose } = useDisclosure()\r\n\r\n\r\n  const contextData = {\r\n    lightMode:lightMode, toggleColorMode:toggleColorMode,\r\n    // moed:mode , setMode:setMode,\r\n    data:data, setData:setData,\r\n\r\n    onItOpen:onOpen ,isItOpen:isOpen, onClose:onClose,\r\n\r\n    ldbdata:ldbdata\r\n  }\r\n  return (\r\n    <DataContext.Provider value={contextData}>{children}</DataContext.Provider>\r\n  )\r\n}"],"mappings":";;AAAA,SAAQA,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACxD,SAASC,YAAY,EAAEC,aAAa,QAAQ,kBAAkB;AAC9D,OAAOC,GAAG,MAAM,WAAW;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,WAAW,gBAAGR,aAAa,CAAC,CAAC;AAEnC,eAAeQ,WAAW;AAE1B,OAAO,MAAMC,YAAY,GAAGC,IAAA,IAAgB;EAAAC,EAAA;EAAA,IAAf;IAACC;EAAQ,CAAC,GAAAF,IAAA;EAErC,MAAM;IAAEG,SAAS;IAAEC;EAAgB,CAAC,GAAGX,YAAY,CAAC,CAAC;EACrD,IAAIY,SAAS,GAAGF,SAAS,KAAI,OAAO,GAAE,IAAI,GAAC,KAAK;;EAEhD;EACA;EACA;EACA;;EAEA;EACA,IAAI,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,CAAC;EAC9B;EACA;EACF,CAAC;EACD;EACA,IAAIgB,OAAO,GAACb,GAAG,CAACc,GAAG,CAAC,MAAM,EAAEC,KAAK,IAAG;IAACC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EAAA,CAAC,CAAC;EACzDH,OAAO,CAACC,OAAO,GAACA,OAAO,GAAC,CAAC,CAAC,CAAC;EAC3B;EACA;EACA;;EAEA,IAAI;IAAEK,MAAM;IAAEC,MAAM;IAAEC;EAAQ,CAAC,GAAGrB,aAAa,CAAC,CAAC;EAGjD,MAAMsB,WAAW,GAAG;IAClBX,SAAS,EAACA,SAAS;IAAED,eAAe,EAACA,eAAe;IACpD;IACAE,IAAI,EAACA,IAAI;IAAEC,OAAO,EAACA,OAAO;IAE1BU,QAAQ,EAACH,MAAM;IAAEI,QAAQ,EAACL,MAAM;IAAEE,OAAO,EAACA,OAAO;IAEjDP,OAAO,EAACA;EACV,CAAC;EACD,oBACEX,OAAA,CAACC,WAAW,CAACqB,QAAQ;IAACT,KAAK,EAAEM,WAAY;IAAAd,QAAA,EAAEA;EAAQ;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AAE/E,CAAC;AAAAtB,EAAA,CArCYF,YAAY;EAAA,QAEgBN,YAAY,EAoBjBC,aAAa;AAAA;AAAA8B,EAAA,GAtBpCzB,YAAY;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}